import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { GetServerSideProps, GetStaticProps } from "next";
import mongoose, { HydratedDocument } from "mongoose";
import RandomData, { IRandomData } from "@/models/RandomData";
import Apps, { AppsDocument, IApps } from "@/models/Apps";
import Link from "next/link";
import mongoConnect from "@/utils/mongoConnect";

type Props = {
  data: IRandomData[];
  apps: IApps[];
};

export const getStaticProps: GetStaticProps<Props> = async (context) => {
  await mongoConnect();
  const [data, apps] = await Promise.all([
    RandomData.find(),
    Apps.find<HydratedDocument<AppsDocument>>().limit(10),
  ]);

  return {
    revalidate: 30,
    props: {
      data: data.map((item) => item.toJSON() as IRandomData),
      apps: apps.map((item) => item.toJSON()),
    },
  };
};

export default function Home(props: Props) {
  const onClick = () => {
    fetch("/api/insertData", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ number: Math.random() * 100 }),
    }).then(() => alert("Done"));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <pre>{JSON.stringify(props.data, null, 2)}</pre>
        <button onClick={onClick}>Insert Data</button>
        <hr />
        <ul>
          {props.apps.map((app) => (
            <li key={app._id}>
              <Link style={{ color: "blue" }} href={`/apps/${app.handle}`}>
                {app.name}
              </Link>
            </li>
          ))}
        </ul>
      </main>
    </>
  );
}
