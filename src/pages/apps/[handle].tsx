import Apps, { IApps } from "@/models/Apps";
import mongoConnect from "@/utils/mongoConnect";
import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";

type Props = { app: IApps };

export const getStaticProps: GetStaticProps<Props, { handle: string }> = async (
  context
) => {
  await mongoConnect();
  const app = await Apps.findOne({ handle: context.params!.handle }).exec();
  return { props: { app: app.toJSON() } };
};

export const getStaticPaths: GetStaticPaths<{ handle: string }> = async (
  context
) => {
  // await mongoConnect();
  // const apps = await Apps.find({}, {}, { maxTimeMS: 1000000 });

  return {
    fallback: true,
    paths: [],
  };
};

export default function AppPage(props: Props) {
  if (!props.app) return <h1>Not found!</h1>;

  return (
    <>
      <Head>
        <title>{props.app.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <nav className="navbar navbar-light bg-light">
          <a className="navbar-brand" href="#">
            Navbar
          </a>
        </nav>
        <h1>{props.app.name}</h1>
      </main>
    </>
  );
}
